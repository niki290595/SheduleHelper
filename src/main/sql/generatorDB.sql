-- MySQL Script generated by MySQL Workbench
-- 05/25/16 00:53:21
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ScheduleDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ScheduleDB` ;

-- -----------------------------------------------------
-- Schema ScheduleDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ScheduleDB` DEFAULT CHARACTER SET utf8 ;
USE `ScheduleDB` ;

-- -----------------------------------------------------
-- Table `ScheduleDB`.`Direction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Direction` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Direction` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Group` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(15) NOT NULL,
  `idDirection` INT NOT NULL,
  `studentsNumber` INT NULL,
  UNIQUE INDEX `idgroup_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_group_ditection_idx` (`idDirection` ASC),
  CONSTRAINT `fk_group_ditection`
    FOREIGN KEY (`idDirection`)
    REFERENCES `ScheduleDB`.`Direction` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`AudienceType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`AudienceType` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`AudienceType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Audience`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Audience` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Audience` (
  `id` INT NOT NULL,
  `№` VARCHAR(6) NULL,
  `idAudienceType` INT NULL,
  `capacity` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_audience_audiencetype1_idx` (`idAudienceType` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_audience_audiencetype1`
    FOREIGN KEY (`idAudienceType`)
    REFERENCES `ScheduleDB`.`AudienceType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Teacher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Teacher` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Teacher` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `FIO` VARCHAR(45) NOT NULL,
  `AcademicDegree` VARCHAR(45) NULL,
  `position` VARCHAR(45) NULL,
  `phone` VARCHAR(20) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Discipline`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Discipline` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Discipline` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`AcademicPlan`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`AcademicPlan` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`AcademicPlan` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idDirection` INT NOT NULL,
  `idDiscipline` INT NOT NULL,
  `lection` INT NULL,
  `practiсe` INT NULL,
  `lab` INT NULL,
  INDEX `fk_academicplan_discipline1_idx` (`idDiscipline` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_academicplan_ditection1`
    FOREIGN KEY (`idDirection`)
    REFERENCES `ScheduleDB`.`Direction` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_academicplan_discipline1`
    FOREIGN KEY (`idDiscipline`)
    REFERENCES `ScheduleDB`.`Discipline` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`DisciplineType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`DisciplineType` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`DisciplineType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Mentor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Mentor` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Mentor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idDiscipline` INT NOT NULL,
  `idDisciplineType` INT NOT NULL,
  `idTeacher` INT NOT NULL,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_item_teacher1_idx` (`idTeacher` ASC),
  INDEX `fk_item_discipline1_idx` (`idDiscipline` ASC),
  INDEX `fk_mentor_type1_idx` (`idDisciplineType` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_item_teacher1`
    FOREIGN KEY (`idTeacher`)
    REFERENCES `ScheduleDB`.`Teacher` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_item_discipline1`
    FOREIGN KEY (`idDiscipline`)
    REFERENCES `ScheduleDB`.`Discipline` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_mentor_type1`
    FOREIGN KEY (`idDisciplineType`)
    REFERENCES `ScheduleDB`.`DisciplineType` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`TimeTable`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`TimeTable` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`TimeTable` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `timeBegin` TIME NULL,
  `timeEnd` TIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Navigator`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Navigator` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Navigator` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dayOfWeek` INT NOT NULL,
  `idTime` INT NOT NULL,
  `weekOdd` INT NOT NULL,
  `idAudience` INT NOT NULL,
  `idMentor` INT NOT NULL,
  INDEX `fk_schedule_audience1_idx` (`idAudience` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_Navigator_TimeTable1_idx` (`idTime` ASC),
  INDEX `fk_Navigator_Mentor1_idx` (`idMentor` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_schedule_audience1`
    FOREIGN KEY (`idAudience`)
    REFERENCES `ScheduleDB`.`Audience` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Navigator_TimeTable1`
    FOREIGN KEY (`idTime`)
    REFERENCES `ScheduleDB`.`TimeTable` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Navigator_Mentor1`
    FOREIGN KEY (`idMentor`)
    REFERENCES `ScheduleDB`.`Mentor` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`ScheduleItem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`ScheduleItem` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`ScheduleItem` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idNavigator` INT NOT NULL,
  `idGroup` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_scheduleitem_group1_idx` (`idGroup` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_scheduleitem_Navigator1`
    FOREIGN KEY (`idNavigator`)
    REFERENCES `ScheduleDB`.`Navigator` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_scheduleitem_group1`
    FOREIGN KEY (`idGroup`)
    REFERENCES `ScheduleDB`.`Group` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`Category` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`Category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ScheduleDB`.`User1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ScheduleDB`.`User1` ;

CREATE TABLE IF NOT EXISTS `ScheduleDB`.`User1` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `pass` BLOB NULL,
  `idCategory` INT NOT NULL,
  `salt` VARCHAR(45) NULL,
  `dateCreation` DATE NULL,
  `dateModification` DATE NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_idcategory_idx` (`idCategory` ASC),
  CONSTRAINT `fk_idcategory`
    FOREIGN KEY (`idCategory`)
    REFERENCES `ScheduleDB`.`Category` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `ScheduleDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `ScheduleDB`.`mainView`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ScheduleDB`.`mainView` (`'Day Of Week'` INT, `'Time Begin'` INT, `'Time End'` INT, `'№Audience'` INT, `'Capacity'` INT, `'Audience Type'` INT, `'Discipline'` INT, `'Discipline Type'` INT, `'TeacherFIO'` INT, `'Academic Degree'` INT, `'Position'` INT, `'Phone'` INT, `'Group'` INT, `'Student Number'` INT, `'Direction'` INT, `'Discipline In Academic Plan'` INT, `'Lection'` INT, `'Practice'` INT, `'Lab'` INT);

-- -----------------------------------------------------
-- View `ScheduleDB`.`mainView`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `ScheduleDB`.`mainView` ;
DROP TABLE IF EXISTS `ScheduleDB`.`mainView`;
USE `ScheduleDB`;
CREATE  OR REPLACE VIEW mainView AS
	SELECT
		Navigator.dayOfWeek AS 'Day Of Week',
        TimeTable.timeBegin AS 'Time Begin',
        TimeTable.timeEnd AS 'Time End',
        Navigator.idAudience AS '№Audience',
        Audience.capacity AS 'Capacity',
        AudienceType.name AS 'Audience Type',
        Discipline.name AS 'Discipline',
        DisciplineType.name AS 'Discipline Type',
        teacher.FIO AS 'TeacherFIO',
        Teacher.academicDegree AS 'Academic Degree',
        Teacher.position AS 'Position',
        Teacher.phone AS 'Phone',
        `Group`.name AS 'Group',
        `Group`.studentsNumber AS 'Student Number',
        Direction.name AS 'Direction',
        Discipline2.name AS 'Discipline In Academic Plan',
        AcademicPlan.lection AS 'Lection',
        AcademicPlan.practiсe AS 'Practice',
        AcademicPlan.lab AS 'Lab'
    FROM
		Navigator,
        Audience,
        AudienceType,
        TimeTable,
        Mentor,
        DisciplineType,
        Discipline,
        Discipline as Discipline2,
        AcademicPlan,
        Direction,
        `Group`,
        ScheduleItem,
        Teacher
	WHERE
		Audience.idAudienceType = AudienceType.id AND
        Navigator.idAudience = Audience.id AND
        Navigator.idTime = TimeTable.id AND
        Navigator.idMentor = Mentor.id AND
        Mentor.idDiscipline = Discipline.id AND
        Mentor.idDisciplineType = DisciplineType.id AND
        Mentor.idTeacher = Teacher.id AND
        ScheduleItem.idNavigator = Navigator.id AND
        ScheduleItem.idGroup = `Group`.id AND
        `Group`.idDirection = Direction.id AND
        AcademicPlan.idDirection = Direction.id AND
        AcademicPlan.idDiscipline = Discipline2.id;
SET SQL_MODE = '';
GRANT USAGE ON *.* TO Reader;
 DROP USER Reader;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'Reader';

GRANT SELECT ON TABLE `ScheduleDB`.* TO 'Reader';
SET SQL_MODE = '';
GRANT USAGE ON *.* TO Owner;
 DROP USER Owner;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'Owner' IDENTIFIED BY '1111';

GRANT ALL ON `ScheduleDB`.* TO 'Owner';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
